# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ModelPublic(UniversalBaseModel):
    """
    Public API model for Model
    """

    id: str = pydantic.Field()
    """
    The string ID of the model
    """

    name: str = pydantic.Field()
    """
    The name of the model
    """

    description: str = pydantic.Field()
    """
    The description of the model
    """

    released: dt.datetime = pydantic.Field()
    """
    The UTC time the model was released
    """

    number_of_runs: int = pydantic.Field()
    """
    The number of times the model has been run
    """

    input_shape_requirements: str = pydantic.Field()
    """
    The input shape requirements for the model
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
